{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1dCue7ikahGj2h9v_9tVCTs9_fwCXe2AX","timestamp":1731677627143},{"file_id":"1zZbU5QXY3ZEtfsKWHQC-JGRhxn7rwGmd","timestamp":1731382230935}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО"],"metadata":{"id":"8hJfL9b2l439"}},{"cell_type":"code","source":["кабанова валерия евгеньевна"],"metadata":{"id":"wRnqvYOkl6EX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Дисклеймер"],"metadata":{"id":"weOtPwPQmgpD"}},{"cell_type":"markdown","source":["В данной практике вам необходимо применить все ваши знания по темам:\n","\n","- Функции\n","- Словари\n","- Списки\n","- Множества\n","- Условные конструкции\n","- Запросы\n","\n","и все что было изучено на прошлых практических занятиях\n","\n","В каждом задании кратко описаны функции, которые необходимо реализовать, детали реализации вы должны продумать самостоятельно.\n","\n","# **Дисклеймер 2**\n","\n","В данной практике также учитывается критерий: чистота и читаемость кода"],"metadata":{"id":"LznB3uscmjDa"}},{"cell_type":"markdown","source":["# Задание 0"],"metadata":{"id":"7nSJIqkTvC_C"}},{"cell_type":"markdown","source":["Создайте функцию по нахождению уникальных элементов из двух списков\n","\n","\n","\n","```\n","a = [1, 2, 3, 4]\n","b = [3, 4, 5, 6]\n","```\n","\n"],"metadata":{"id":"exACjTiVvGUe"}},{"cell_type":"code","source":["a = [1, 2, 3, 4]\n","b = [3, 4, 5, 6]\n","\n","def Uniq(a, b):\n","    res = []\n","    for el in a:\n","        if el not in b and el not in res:\n","            res.append(el)\n","    for el in b:\n","        if el not in a and el not in res:\n","            res.append(el)\n","    return res\n","\n","\n","print(Uniq(a, b))"],"metadata":{"id":"V_31CrfGbH7V","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731679864038,"user_tz":-300,"elapsed":335,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"c88cd16c-742c-4a63-96e6-d15988339988"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 2, 5, 6]\n"]}]},{"cell_type":"markdown","source":["# Задание 1"],"metadata":{"id":"SVWNlBALpCNo"}},{"cell_type":"markdown","source":["Симулятор виртуального питомца\n","\n","Цель: создать виртуальный симулятор домашних животных, в котором пользователи смогут заводить питомцев и ухаживать за ними.\n","\n","Требования:\n","\n","- Функция для усыновления питомца (имя, тип, возраст).\n","- Функция для того, чтобы покормить питомца, поиграть с ним или уложить его спать.\n","- Функция для отображения состояния питомца (голод, радость, энергия)."],"metadata":{"id":"RcKA-VEqpC7f"}},{"cell_type":"code","source":["class Pet:\n","    def __init__(self, name, type, age):\n","        self.name = name\n","        self.type = type\n","        self.age = age\n","        self.hunger = 50\n","        self.happy = 50\n","        self.energy = 50\n","\n","    def feed(self):\n","        if self.hunger <= 80:\n","            self.hunger += 20\n","            self.happy -= 10\n","            print(\"Корм питательный, но долго разгрызается и не особо вкусный(но полезный)\")\n","        else:\n","            print(f\"{self.name} сыт\")\n","\n","    def play(self):\n","        if self.energy > 20:\n","            self.happy += 30\n","            self.energy -= 20\n","            print(\"поиграли\")\n","        else:\n","            print(f\"{self.name} устал\")\n","\n","    def sleep(self):\n","        if self.energy < 100:\n","            self.energy += 30\n","            self.hunger -= 10\n","            print(f\"{self.name} поспал\")\n","        else:\n","            print(f\"{self.name} уже переспал\")\n","\n","    def show_status(self):\n","        print(f\"Состояние {self.name}:\")\n","        print(f\"  Тип: {self.type}, Возраст: {self.age}\")\n","        print(f\"  Голод: {self.hunger}\")\n","        print(f\"  Радость: {self.happy}\")\n","        print(f\"  Энергия: {self.energy}\")\n","\n","\n","def Run():\n","    type = input(\"Какой тип питомца вы хотите?\\n\")\n","    age = int(input(\"А какой возраст у него должен быть?\\n\"))\n","    name = input(\"Прекрасный выбор! дайте ему имя\\n\")\n","    print('теперь он ваш! Владейте им!')\n","\n","    pet = Pet(name, type, age)\n","\n","    while True:\n","        print('\\nЧто вы хотите сделать с ним?')\n","        print('Вы можете покормить его, поиграть с ним, или уложить спать')\n","        print('Также вы можете осмотреть его, чтобы узнать состояние')\n","        print('Если вы устали, напишите \"выйти\", и игра завершится')\n","        action = input(\"Ваш выбор: \").lower()\n","        if 'покормить' in action:\n","            pet.feed()\n","        elif 'поиграть' in action:\n","            pet.play()\n","        elif 'спать' in action:\n","            pet.sleep()\n","        elif 'осмотреть' in action:\n","            pet.show_status()\n","        elif 'выйти' in action:\n","            print(f'{pet.name} сдох')\n","            break\n","        else:\n","            print(\"неверный выбор\")\n","Run()"],"metadata":{"id":"hE7mF-HXpJLO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731700956805,"user_tz":-300,"elapsed":11570,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"8bf2b0da-7114-4668-9ce1-5df9ab484a60"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Какой тип питомца вы хотите?\n","1\n","А какой возраст у него должен быть?\n","1\n","Прекрасный выбор! дайте ему имя\n","1\n","теперь он ваш! Владейте им!\n","\n","Что вы хотите сделать с ним?\n","Вы можете покормить его, поиграть с ним, или уложить спать\n","Также вы можете осмотреть его, чтобы узнать состояние\n","Если вы устали, напишите \"выйти\", и игра завершится\n","Ваш выбор: выйти\n","1 сдох\n"]}]},{"cell_type":"markdown","source":["# Задание 2"],"metadata":{"id":"qZ7qFQnmssNd"}},{"cell_type":"markdown","source":["Рыцарь и дракон\n","\n","Цель: создать небольшую игру, в которой вам необходимо играть за рыцаря и сразиться с драконом\n","\n","Требования:\n","\n","- Создание персонажа (имя, информация о доспехах, оружии, урон, здоровье)\n","- Управление персонажем и мини сюжет\n","- Создание дракона (Имя, информация о здоровье и уроне)\n","- Боевая система (нанесение и получение урона, урон должен быть случайным в заданном диапазоне)\n","- Реализовать бой между драконом и рыцарем"],"metadata":{"id":"UaccTe7ltNvg"}},{"cell_type":"code","source":["import random\n","\n","\n","def create_knight():\n","    print(\"создание рыцаря\")\n","    name = input(\"имя: \")\n","    armor = input(\"доспехи: \")\n","    weapon = input(\"оружие (огнестрел, катана, лк препода урфу): \")\n","    hp = int(input(\"хп: \"))\n","    damage_range = (10, 20)\n","    if weapon == \"огнестрел\":\n","        damage_range = (15, 25)\n","    elif weapon == \"катана\":\n","        damage_range = (30, 45)\n","    elif weapon == \"лк препода урфу\":\n","        damage_range = (50, 75)\n","    if armor == \"ssshhhiiittt\":\n","        hp += 100\n","    return {\"name\": name, \"armor\": armor, \"weapon\": weapon, \"health\": hp, \"damage_range\": damage_range}\n","\n","\n","def create_dragon():\n","    print(\"\\nсоздание дракона\")\n","    name = input(\"имя: \") + ' Павлович'\n","    hp = int(input(\"хп: \"))\n","    damage_range = (15, 30)\n","    return {\"name\": name, \"health\": hp, \"damage_range\": damage_range}\n","\n","\n","def attack(attack, defendce):\n","    damage = random.randint(*attack[\"damage_range\"])\n","    defendce[\"health\"] -= damage\n","    return damage\n","\n","\n","def fight(knight, dragon):\n","    while knight[\"health\"] > 0 and dragon[\"health\"] > 0:\n","        print(f\"\\nудар рыцаря {knight['name']}!\")\n","        damage = attack(knight, dragon)\n","        print(f\"{knight['name']} наносит {damage} урона\")\n","        print(f\"хп дракона {dragon['name']}: {dragon['health']}\")\n","\n","        if dragon[\"health\"] <= 0:\n","            print(f\"\\n{dragon['name']} побежден!\")\n","            break\n","\n","\n","        print(f\"\\nудар дракона {dragon['name']}!\")\n","        damage = attack(dragon, knight)\n","        print(f\"{dragon['name']} наносит {damage} урона\")\n","        print(f\"хп рыцаря {knight['name']}: {knight['health']}\")\n","\n","        if knight[\"health\"] <= 0:\n","            print(f\"\\n{knight['name']} сдох, что-бы продолжить игру скиньте автору сто рублей на тинькоф\")\n","            break\n","\n","\n","\n","def run():\n","    exit = input(\"начать игру?(да) \\n\")\n","    if exit.lower() == \"да\":\n","        knight = create_knight()\n","        dragon = create_dragon()\n","        print(f\"бедолаге по имени {knight['name']} исполнилось 18 лет и родители прогнали его из дома со словами\"\n","              f\" не возвращайся без 100 баллов брс которые охраняет страшный дракон {dragon['name']}\")\n","        print(\"что делать?\")\n","        print(\"1. на языке боли объяснить дракону что баллы теперь мои\")\n","        print(\"2. пойти плакать\")\n","        choice = input()\n","        if choice == \"1\":\n","            fight(knight, dragon)\n","        elif choice == \"2\":\n","            print(\"вы умерли от депрессии\")\n","        else:\n","            print(\"цифра эрор\")\n","\n","\n","run()"],"metadata":{"id":"LCcxp5Q0srjY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731691595813,"user_tz":-300,"elapsed":3501,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"54d19f17-619a-41dc-c3ff-d2b9034a864e"},"execution_count":2,"outputs":[{"name":"stdout","output_type":"stream","text":["начать игру?(да) \n","'\n"]}]},{"cell_type":"markdown","source":["# Задание 3\n"],"metadata":{"id":"N8oFiEXol3e2"}},{"cell_type":"markdown","source":["Цель - создать менеджера команды Pokémon, который позволит пользователям:\n","\n","- Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)\n","- Удалять покемонов из их команды.\n","- Просматривать подробную информацию обо всех покемонах в команде.\n","- Находить покемона по имени.\n","- Устраивать тренировочный бой между двумя покемонами\n","\n","Для данной задачи используйте: https://pokeapi.co/\n"],"metadata":{"id":"9p4WQG_Vl7wB"}},{"cell_type":"code","source":["import requests\n","import random\n","\n","class Pokemony:\n","    def __init__(self):\n","        self.team = {}\n","\n","    def add_pokemon(self, name):\n","        if name in self.team:\n","            print(f\"{name.capitalize()} уже есть\")\n","            return\n","        url = f\"https://pokeapi.co/api/v2/pokemon/{name.lower()}\"\n","        response = requests.get(url)\n","        if response.status_code == 200:\n","            data = response.json()\n","            pokemon_info = {\n","                \"name\": data[\"name\"],\n","                \"type\": [t[\"type\"][\"name\"] for t in data[\"types\"]],\n","                \"weight\": data[\"weight\"],\n","                \"height\": data[\"height\"],\n","                \"abilities\": [a[\"ability\"][\"name\"] for a in data[\"abilities\"]],\n","            }\n","            self.team[name] = pokemon_info\n","            print(f\"{name.capitalize()} добавлен в стак\")\n","        else:\n","            print(f\"покемон потерялся\")\n","\n","    def remove_pokemon(self, name):\n","        if name in self.team:\n","            del self.team[name]\n","            print(f\"{name.capitalize()} удален из стака\")\n","        else:\n","            print(f\"{name.capitalize()} в отпуске\")\n","\n","    def chek_team(self):\n","        if not self.team:\n","            print(\"никого нету((\")\n","        else:\n","            for name, info in self.team.items():\n","                print(f\"\\nИмя: {info['name'].capitalize()}\")\n","                print(f\"Тип: {info['type']}\")\n","                print(f\"Вес: {info['weight']}\")\n","                print(f\"Рост: {info['height']}\")\n","                print(f\"Способности: {info['abilities']}\")\n","\n","    def find_pokemon(self, name):\n","        if name in self.team:\n","            info = self.team[name]\n","            print(f\"\\nИмя: {info['name'].capitalize()}\")\n","            print(f\"Тип: {info['type']}\")\n","            print(f\"Вес: {info['weight']}\")\n","            print(f\"Рост: {info['height']}\")\n","            print(f\"Способности: {info['abilities']}\")\n","        else:\n","            print(f\"{name.capitalize()} в отпуске\")\n","\n","    def fight(self, name1, name2):\n","        if name1 not in self.team or name2 not in self.team:\n","            print(\"кто-то из работяг потерялся\")\n","            return\n","\n","        pokemon1 = self.team[name1]\n","        pokemon2 = self.team[name2]\n","\n","        print(f\"\\nфайт между {pokemon1['name'].capitalize()} и {pokemon2['name'].capitalize()}\")\n","        damage1 = random.randint(0, 100)\n","        damage2 = random.randint(0, 100)\n","\n","        print(f\"{pokemon1['name'].capitalize()} наносит {damage1} урона\")\n","        print(f\"{pokemon2['name'].capitalize()} наносит {damage2} урона\")\n","\n","        if damage1 > damage2:\n","            print(f\"{pokemon1['name'].capitalize()} победил\")\n","        elif damage2 > damage1:\n","            print(f\"{pokemon2['name'].capitalize()} победил\")\n","        else:\n","            print(\"оба в нокауте\")\n","\n","def run():\n","    proga = Pokemony()\n","\n","    while True:\n","        print(\"1. Добавить покемонов в свою команду\")\n","        print(\"2. Удалить покемона из команды\")\n","        print(\"3. Просмотреть подробную информацию обо всех покемонах в команде\")\n","        print(\"4. Найти покемона по имени\")\n","        print(\"5. Устроить тренировочный бой между двумя покемонами\")\n","        print(\"6. Выход\")\n","        choice = input(\"Выберите действие: \")\n","\n","        if choice == \"1\":\n","            name = input(\"введите имя покемона: \").lower()\n","            proga.add_pokemon(name)\n","        elif choice == \"2\":\n","            name = input(\"введите имя покемона: \").lower()\n","            proga.remove_pokemon(name)\n","        elif choice == \"3\":\n","            proga.chek_team()\n","        elif choice == \"4\":\n","            name = input(\"введите имя покемона: \").lower()\n","            proga.find_pokemon(name)\n","        elif choice == \"5\":\n","            name1 = input(\"введите имя первого покемона: \").lower()\n","            name2 = input(\"введите имя второго покемона: \").lower()\n","            proga.fight(name1, name2)\n","        elif choice == \"6\":\n","            print(\"покемоны прикольно конечно но уже как будто пикачу головного мозга\")\n","            break\n","        else:\n","            print(\"цифра эрор\")\n","\n","run()"],"metadata":{"id":"NnGYp1MTqi5k","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731688242795,"user_tz":-300,"elapsed":80713,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"687f3c7e-856c-4bd8-f402-4f27c1c8e3a5"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["1. Добавить покемонов в свою команду\n","2. Удалить покемона из команды\n","3. Просмотреть подробную информацию обо всех покемонах в команде\n","4. Найти покемона по имени\n","5. Устроить тренировочный бой между двумя покемонами\n","6. Выход\n","Выберите действие: 6\n","покемоны прикольно конечно но уже как будто пикачу головного мозга\n"]}]}]}