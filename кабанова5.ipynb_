{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1V1ZMKRD2pw2S6GHWvVWZ2DUCzsoCsxxW","timestamp":1729246287409},{"file_id":"1TEBJaKANAI0JxDY268tNeKGpHMChb2sK","timestamp":1728962701420}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО:"],"metadata":{"id":"Bu5gIJfHNPHw"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"CbHI8c7cM9Eg"},"outputs":[],"source":["кабанова валерия евгеньевна"]},{"cell_type":"markdown","source":["# **Задание 1**"],"metadata":{"id":"VrNrBpmocGRd"}},{"cell_type":"markdown","source":["\n","\n","Дан словарь, содержащий имена и возраст людей, напишите программу выводящую возраст человека по имени\n","\n","Дано:\n","\n","```\n","{\"Alice\": 25, \"Bob\": 30, \"Charlie\": 35}\n","```\n","\n","Вввод:\n","\n","\n","```\n","Alice\n","```\n","\n","Вывод:\n","\n","\n","```\n","Alice 25\n","```\n"],"metadata":{"id":"XhV1bnm1bR2h"}},{"cell_type":"code","source":["a = {\"Alice\": 25, \"Bob\": 30, \"Charlie\": 35}\n","q = str(input())\n","print(q, a[f'{q}'])"],"metadata":{"id":"9T0nNFCEbpaF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729246351544,"user_tz":-300,"elapsed":7806,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"b96cbe71-7e92-4791-c23c-22413ec3c623"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Charlie\n","Charlie 35\n"]}]},{"cell_type":"markdown","source":["# **Задание 2**\n"],"metadata":{"id":"lpjJz-_YcJ-t"}},{"cell_type":"markdown","source":["\n","\n","Дан список, состоящий из целых чисел, необходимо написать функцию считающую сумму всех положительных четных чисел списка\n","\n","Ввод:\n","\n","```\n","1, 2, 3, 4, 5, 6, 7, 8, 9\n","```\n","\n","Вывод:\n","\n","\n","```\n","20\n","```\n","\n","***Запрещено:***\n","\n","*   Использование готовых функций для суммирования чисел\n"],"metadata":{"id":"tMEsAB4rUiWW"}},{"cell_type":"code","source":["a = eval(input())\n","s = 0\n","for i in a:\n","    if i > 0 and i % 2 == 0:\n","        s += i\n","print(s)"],"metadata":{"id":"wDNUFLeqNQS_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729246758957,"user_tz":-300,"elapsed":9422,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"3bd7fbd3-00f8-4492-a7ad-8b891ea118c2"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["1, 2, 3, 4, 5, 6, 7, 8, 9\n","20\n"]}]},{"cell_type":"markdown","source":["# **Задание 3**"],"metadata":{"id":"WT_v-vz1dUZJ"}},{"cell_type":"markdown","source":["Дан словарь, содержащий название фрукта и его цвет, выведите список всех желтых фруктов\n","\n","\n","Дано:\n","\n","```\n","fruits_and_flowers = {\n","    \"apple\": \"green\",\n","    \"banana\": \"yellow\",\n","    \"mango\": \"yellow\",\n","    \"orange\": \"orange\",\n","    \"lemon\": \"yellow\",\n","    \"grape\": \"violet\"\n","}\n","```\n","\n","Вывод:\n","\n","\n","```\n","Yellow fruits:\n","banana\n","lemon\n","mango\n","```\n","\n"],"metadata":{"id":"ZI5Xeh2DdXgF"}},{"cell_type":"code","source":["fruits_and_flowers = {\n","    \"apple\": \"green\",\n","    \"banana\": \"yellow\",\n","    \"mango\": \"yellow\",\n","    \"orange\": \"orange\",\n","    \"lemon\": \"yellow\",\n","    \"grape\": \"violet\"\n","}\n","print('Yellow fruits:')\n","for key, value in fruits_and_flowers.items():\n","    if value == \"yellow\":\n","        print(key)"],"metadata":{"id":"aNzFTkhKdkTG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729247042506,"user_tz":-300,"elapsed":288,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"09519e12-8cab-4463-d26a-2dba703a0518"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Yellow fruits:\n","banana\n","mango\n","lemon\n"]}]},{"cell_type":"markdown","source":["# **Задание 4**\n"],"metadata":{"id":"iHtMGt2icM7w"}},{"cell_type":"markdown","source":["\n","\n","Дан словарь, необходимо написать функцию меняющую ключ и значение местами\n","\n","Дано:\n","\n","\n","```\n","{\"a\": 1, \"b\": 2, \"c\": 3}\n","```\n","\n","Вывод:\n","\n","```\n","{1: 'a', 2: 'b', 3: 'c'}\n","```\n","\n"],"metadata":{"id":"rS3THsnBQ_EB"}},{"cell_type":"code","source":["a = {\"a\": 1, \"b\": 2, \"c\": 3}\n","q = {}\n","for key, value in a.items():\n","    q[value] = key\n","print(q)"],"metadata":{"id":"MNRusyLDcQ59","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729247439823,"user_tz":-300,"elapsed":285,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"6169a81a-8114-48ea-dd04-a8e4ba24fba6"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["{1: 'a', 2: 'b', 3: 'c'}\n"]}]},{"cell_type":"markdown","source":["# **Задание 5**"],"metadata":{"id":"x6ff5nd0cUxD"}},{"cell_type":"markdown","source":["Дан список слов, неограниченной длинны, сформируйте словарь, где в качестве ключа будет слово, а в качестве значения количество символов\n","\n","**Критерии**\n","\n","\n","*   Словарь необходимо отсортировать по убыванию количества элементов в списке.\n","*   Подсчет элементов должен быть реализован в отдельной функции\n","*   Сортировка пары `ключ:значение` должна быть реализована также в виде отдельной функции\n","\n","\n","\n","\n","Дано:\n","```\n","['apple','banana','orange','apple','apple','banana']\n","```\n","\n","\n","Вывод:\n","```\n","{'apple':3, 'banana': 2, 'orange': 1}\n","```\n","\n","***Запрещено:***\n","\n","*   Использование готовых функций для сортировки словаря\n","*   Использование готовых функций для подсчета элементов\n","\n"],"metadata":{"id":"ypQNHOG4NQz3"}},{"cell_type":"code","source":["word_list = ['apple', 'banana', 'orange', 'apple', 'apple', 'banana']\n","\n","def castomniy_len(lst):\n","    h = 0\n","    for i in lst:\n","        h += 1\n","    return h\n","\n","def count_elements(word_list):\n","    word_count = {}\n","    for word in word_list:\n","        if word in word_count:\n","            word_count[word] += 1\n","        else:\n","            word_count[word] = 1\n","    return word_count\n","\n","def sort_dict(word_count):\n","    word_items = [(key, value) for key, value in word_count.items()]\n","    for i in range(1, castomniy_len(word_items)):\n","        key_item = word_items[i]\n","        j = i - 1\n","        while j >= 0 and word_items[j][1] < key_item[1]:\n","            word_items[j + 1] = word_items[j]\n","            j -= 1\n","        word_items[j + 1] = key_item\n","\n","    sorted_word_count = {key: value for key, value in word_items}\n","    return sorted_word_count\n","\n","word_count = count_elements(word_list)\n","sorted_word_count = sort_dict(word_count)\n","\n","print(sorted_word_count)"],"metadata":{"id":"J10PjdVQUbyq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729248873984,"user_tz":-300,"elapsed":318,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"99338500-5e44-4dae-b9e8-900cddf7c4eb"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["{'apple': 3, 'banana': 2, 'orange': 1}\n"]}]},{"cell_type":"markdown","source":["# **Задание 6**"],"metadata":{"id":"d7fDUr2WcY_G"}},{"cell_type":"markdown","source":["Дан словарь, содержащий информацию о людях, необходимо:\n","\n","\n","\n","*   Вывести всех людей старше 30 лет\n","*   Вывести список городов и количество людей из словаря проживающих в них\n","*   Вывести список профессий и список людей для каждой профессии\n","\n","**Критерии**\n","\n","Каждый из пунктов необходимо реализовать в виде функции\n","\n"],"metadata":{"id":"m11qdVhSWBi7"}},{"cell_type":"code","source":["people_info = {\n","    \"Alice\": {\"age\": 25, \"city\": \"New York\", \"occupation\": \"Engineer\"},\n","    \"Bob\": {\"age\": 30, \"city\": \"Los Angeles\", \"occupation\": \"Designer\"},\n","    \"Charlie\": {\"age\": 35, \"city\": \"Chicago\", \"occupation\": \"Teacher\"},\n","    \"Diana\": {\"age\": 28, \"city\": \"Miami\", \"occupation\": \"Doctor\"},\n","    \"Ethan\": {\"age\": 40, \"city\": \"Seattle\", \"occupation\": \"Chef\"},\n","    \"Frank\": {\"age\": 32, \"city\": \"Atlanta\", \"occupation\": \"Lawyer\"},\n","    \"Gabriella\": {\"age\": 29, \"city\": \"San Francisco\", \"occupation\": \"Software Engineer\"},\n","    \"Harrison\": {\"age\": 38, \"city\": \"Denver\", \"occupation\": \"Architect\"},\n","    \"Isabella\": {\"age\": 26, \"city\": \"Washington D.C.\", \"occupation\": \"Journalist\"},\n","    \"Julian\": {\"age\": 42, \"city\": \"Miami\", \"occupation\": \"Musician\"},\n","    \"Kate\": {\"age\": 31, \"city\": \"Philadelphia\", \"occupation\": \"Nurse\"},\n","    \"Lucas\": {\"age\": 36, \"city\": \"Nashville\", \"occupation\": \"Businessman\"},\n","    \"Mia\": {\"age\": 27, \"city\": \"Atlanta\", \"occupation\": \"Artist\"},\n","    \"Natalie\": {\"age\": 39, \"city\": \"Portland\", \"occupation\": \"Writer\"},\n","    \"Oliver\": {\"age\": 44, \"city\": \"Minneapolis\", \"occupation\": \"Professor\"},\n","    \"Penelope\": {\"age\": 33, \"city\": \"San Diego\", \"occupation\": \"Marketing Manager\"},\n","    \"Quincy\": {\"age\": 41, \"city\": \"Nashville\", \"occupation\": \"Singer\"},\n","    \"Rachel\": {\"age\": 34, \"city\": \"Cleveland\", \"occupation\": \"Teacher\"},\n","    \"Sophia\": {\"age\": 29, \"city\": \"Nashville\", \"occupation\": \"Engineer\"},\n","    \"Tessa\": {\"age\": 37, \"city\": \"Miami\", \"occupation\": \"Lawyer\"}\n","}"],"metadata":{"id":"lSNtB39OWtFl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["people_info = {\n","    \"Alice\": {\"age\": 25, \"city\": \"New York\", \"occupation\": \"Engineer\"},\n","    \"Bob\": {\"age\": 30, \"city\": \"Los Angeles\", \"occupation\": \"Designer\"},\n","    \"Charlie\": {\"age\": 35, \"city\": \"Chicago\", \"occupation\": \"Teacher\"},\n","    \"Diana\": {\"age\": 28, \"city\": \"Miami\", \"occupation\": \"Doctor\"},\n","    \"Ethan\": {\"age\": 40, \"city\": \"Seattle\", \"occupation\": \"Chef\"},\n","    \"Frank\": {\"age\": 32, \"city\": \"Atlanta\", \"occupation\": \"Lawyer\"},\n","    \"Gabriella\": {\"age\": 29, \"city\": \"San Francisco\", \"occupation\": \"Software Engineer\"},\n","    \"Harrison\": {\"age\": 38, \"city\": \"Denver\", \"occupation\": \"Architect\"},\n","    \"Isabella\": {\"age\": 26, \"city\": \"Washington D.C.\", \"occupation\": \"Journalist\"},\n","    \"Julian\": {\"age\": 42, \"city\": \"Miami\", \"occupation\": \"Musician\"},\n","    \"Kate\": {\"age\": 31, \"city\": \"Philadelphia\", \"occupation\": \"Nurse\"},\n","    \"Lucas\": {\"age\": 36, \"city\": \"Nashville\", \"occupation\": \"Businessman\"},\n","    \"Mia\": {\"age\": 27, \"city\": \"Atlanta\", \"occupation\": \"Artist\"},\n","    \"Natalie\": {\"age\": 39, \"city\": \"Portland\", \"occupation\": \"Writer\"},\n","    \"Oliver\": {\"age\": 44, \"city\": \"Minneapolis\", \"occupation\": \"Professor\"},\n","    \"Penelope\": {\"age\": 33, \"city\": \"San Diego\", \"occupation\": \"Marketing Manager\"},\n","    \"Quincy\": {\"age\": 41, \"city\": \"Nashville\", \"occupation\": \"Singer\"},\n","    \"Rachel\": {\"age\": 34, \"city\": \"Cleveland\", \"occupation\": \"Teacher\"},\n","    \"Sophia\": {\"age\": 29, \"city\": \"Nashville\", \"occupation\": \"Engineer\"},\n","    \"Tessa\": {\"age\": 37, \"city\": \"Miami\", \"occupation\": \"Lawyer\"}\n","}\n","def dead_insides(people):\n","    res = [name for name, info in people.items() if info[\"age\"] > 30]\n","    return res\n","\n","def city_cnt(people):\n","    city_count = {}\n","    for info in people.values():\n","        city = info[\"city\"]\n","        if city in city_count:\n","            city_count[city] += 1\n","        else:\n","            city_count[city] = 1\n","    return city_count\n","\n","def rabotyagi(people):\n","    job_dict = {}\n","    for name, info in people.items():\n","        job = info[\"occupation\"]\n","        if job in job_dict:\n","            job_dict[job].append(name)\n","        else:\n","            job_dict[job] = [name]\n","    return job_dict\n","\n","print('старше 30 лет: ', dead_insides(people_info))\n","print('список городов и количество людей из словаря проживающих в них: ', city_cnt(people_info))\n","print('список профессий и список людей для каждой профессии: ', rabotyagi(people_info))"],"metadata":{"id":"qcLO5eQwXkNK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729249940776,"user_tz":-300,"elapsed":296,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"2c1f90a3-8f87-477f-ec8b-6cfeecd98600"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["старше 30 лет:  ['Charlie', 'Ethan', 'Frank', 'Harrison', 'Julian', 'Kate', 'Lucas', 'Natalie', 'Oliver', 'Penelope', 'Quincy', 'Rachel', 'Tessa']\n","список городов и количество людей из словаря проживающих в них:  {'New York': 1, 'Los Angeles': 1, 'Chicago': 1, 'Miami': 3, 'Seattle': 1, 'Atlanta': 2, 'San Francisco': 1, 'Denver': 1, 'Washington D.C.': 1, 'Philadelphia': 1, 'Nashville': 3, 'Portland': 1, 'Minneapolis': 1, 'San Diego': 1, 'Cleveland': 1}\n","список профессий и список людей для каждой профессии:  {'Engineer': ['Alice', 'Sophia'], 'Designer': ['Bob'], 'Teacher': ['Charlie', 'Rachel'], 'Doctor': ['Diana'], 'Chef': ['Ethan'], 'Lawyer': ['Frank', 'Tessa'], 'Software Engineer': ['Gabriella'], 'Architect': ['Harrison'], 'Journalist': ['Isabella'], 'Musician': ['Julian'], 'Nurse': ['Kate'], 'Businessman': ['Lucas'], 'Artist': ['Mia'], 'Writer': ['Natalie'], 'Professor': ['Oliver'], 'Marketing Manager': ['Penelope'], 'Singer': ['Quincy']}\n"]}]},{"cell_type":"markdown","source":["# **Задание 7**"],"metadata":{"id":"27IuB2YScezw"}},{"cell_type":"markdown","source":["Задание: Разработка системы отзывов о предметах\n","\n","Описание: Создать программу на Python для хранения и управления отзывами о предметах учебного курса. Программа должна позволять пользователям добавлять, просматривать и удалять отзывы, а также вычислять средний балл по заданному предмету.\n","\n","**Функционал:**\n","\n","*   Добавление отзыва и оценки:\n","   *   Пользователь может ввести название предмета, оценку (от 1 до 5) и текст отзыва.\n","   *   Отзывы должны храниться в структуре данных (например, словаре), где ключом будет название предмета, а значением - список отзывов (каждый отзыв может хранить оценку и комментарий).\n","*   Просмотр отзывов и оценок:\n","   *   Пользователь может запросить отзывы для указанного предмета.\n","   *   Если для указанного предмета есть отзывы, программа должна отобразить список всех отзывов и соответствующих оценок.\n","*   Удаление отзыва:\n","   *   Пользователь может удалить отзыв по индексу. Необходимо заранее уведомить пользователя о том, какие отзывы доступны для удаления.\n","   *   Программа должна обработать ситуацию, когда индекс введен неправильно.\n","*   Вычисление среднего балла по предмету:\n","   *   Пользователь может ввести название предмета, и программа должна вычислить и вывести средний балл по всем отзывам для этого предмета.\n","   *   Если отзывов нет, программа должна сообщить об этом.\n","\n","\n","**Критерии:**\n","\n","*   Код должен быть оформлен в виде функций\n","*   Необходимо обрабатывать неправильный ввод пользователя\n","*   Должны быть комментарии к функциям\n","*   Присутсвует весь дополнительный функционал\n","\n","\n","\n","**Опционально:**\n","\n","Предлагаю вам добавить свои критерии оценки или вопросы, на которые должен ответить студент, чтобы оценить пару\n","\n","\n"],"metadata":{"id":"Fd95-S9cYhct"}},{"cell_type":"code","source":["reviews = {}\n","def add_review(subject, rating, comment):\n","    \"\"\"\n","    Бесполезный комментарий к функции №1\n","\n","    Добавление отзыва и оценки предмета\n","\n","    \"\"\"\n","    if subject not in reviews:\n","        reviews[subject] = []\n","    reviews[subject].append({\"rating\": rating, \"comment\": comment})\n","    print(f\"Отзыв добавлен для предмета: {subject}\\n\")\n","\n","\n","def view_reviews(subject):\n","    \"\"\"\n","    Бесполезный комментарий к функции №2\n","\n","    Чек отзывов конкретного предмета\n","\n","    \"\"\"\n","    if subject not in reviews or not reviews[subject]:\n","        print(f\"Для предмета '{subject}' отзывов пока нет.\\n\")\n","        return\n","\n","    print(f\"Отзывы для предмета '{subject}':\")\n","    for i, review in enumerate(reviews[subject], 1):\n","        print(f\"{i}. Оценка: {review['rating']}, Комментарий: {review['comment']}\")\n","    print()\n","\n","\n","def delete_review(subject, index):\n","    \"\"\"\n","    Бесполезный комментарий к функции №3\n","\n","    Удаление отзыва по индексу\n","\n","    \"\"\"\n","    if subject not in reviews or not reviews[subject]:\n","        print(f\"Для предмета '{subject}' отзывов нет.\\n\")\n","        return\n","\n","    if 1 <= index <= len(reviews[subject]):\n","        removed_review = reviews[subject].pop(index - 1)\n","        print(f\"Удален отзыв: Оценка {removed_review['rating']}, Комментарий: {removed_review['comment']}\\n\")\n","    else:\n","        print(\"Неправильный индекс! Попробуйте снова.\\n\")\n","\n","\n","def average_review(subject):\n","    \"\"\"\n","    Бесполезный комментарий к функции №4\n","\n","    Вычисление среднего балла предмета\n","\n","    \"\"\"\n","    if subject not in reviews or not reviews[subject]:\n","        print(f\"Для предмета '{subject}' нет отзывов для расчета среднего балла.\\n\")\n","        return\n","\n","    total = sum(review[\"rating\"] for review in reviews[subject])\n","    average = total / len(reviews[subject])\n","    print(f\"Средний балл для предмета '{subject}': {average:.2f}\\n\")\n","\n","\n","def menu():\n","    \"\"\"\n","    Самый бесполезный комментарий к функции №5\n","\n","    Менюшка и выборка деяния\n","\n","    \"\"\"\n","    while True:\n","        print(\"Выберите действие:\")\n","        print(\"1. Добавить отзыв\")\n","        print(\"2. Просмотреть отзывы\")\n","        print(\"3. Удалить отзыв\")\n","        print(\"4. Вычислить средний балл\")\n","        print(\"5. Выйти\")\n","\n","        choice = input(\"Введите номер действия: \")\n","\n","        if choice == \"1\":\n","            subject = input(\"Введите название предмета: \")\n","            try:\n","                rating = int(input(\"Введите оценку (от 1 до 5): \"))\n","                if rating < 1 or rating > 5:\n","                    raise ValueError(\"Оценка должна быть от 1 до 5.\")\n","                comment = input(\"Введите текст отзыва: \")\n","                add_review(subject, rating, comment)\n","            except ValueError as e:\n","                print(f\"Ошибка: {e}\\n\")\n","\n","        elif choice == \"2\":\n","            subject = input(\"Введите название предмета: \")\n","            view_reviews(subject)\n","\n","        elif choice == \"3\":\n","            subject = input(\"Введите название предмета: \")\n","            try:\n","                index = int(input(\"Введите номер отзыва для удаления: \"))\n","                delete_review(subject, index)\n","            except ValueError:\n","                print(\"Ошибка: Введите корректный номер!\\n\")\n","\n","        elif choice == \"4\":\n","            subject = input(\"Введите название предмета: \")\n","            average_review(subject)\n","\n","        elif choice == \"5\":\n","            print(\"Правильный выбор\")\n","            break\n","\n","        else:\n","            print(\"Ошибка: Неверный выбор.\\n\")\n","\n","\n","menu()"],"metadata":{"id":"kzucJrCUa0o7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729252537665,"user_tz":-300,"elapsed":3732,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"d45de89b-5ce2-4a40-8aac-16f72687575a"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Выберите действие:\n","1. Добавить отзыв\n","2. Просмотреть отзывы\n","3. Удалить отзыв\n","4. Вычислить средний балл\n","5. Выйти\n","Введите номер действия: 5\n","Правильный выбор\n"]}]}]}