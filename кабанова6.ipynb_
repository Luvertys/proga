{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1MruQUKhdUh5pFpwL6xF-Bej4wLyRh7Ej","timestamp":1729874221233},{"file_id":"1bbYGdWi_dKiB0HoLFBXxshe_0yemJtea","timestamp":1729568288470}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"tKNG_RzWxG6g"}},{"cell_type":"markdown","source":["# **Дисклеймер**\n","\n","В данной практике будет введен дополнительный критерий: чистота и читаемость кода, а также соблюдение правил описанных в начале практики"],"metadata":{"id":"cFcrKfclKWh0"}},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"0SnE87X1xDlV"}},{"cell_type":"markdown","source":["# Задание 1\n","\n","**Задача:**\n","\n","Напишите функцию очищающий список от дубликтов\n","\n","\n","*Запрещено:*\n","\n","*   Использовать set() или готовые функции очищающие список от дубликатов\n","\n","Вввод:\n","\n","```\n","apple banana apple 1 3 4 4 5\n","```\n","\n","\n","Вывод:\n","\n","```\n","apple banana 1 3 4 5\n","```\n","\n"],"metadata":{"id":"VxawR9NubT_F"}},{"cell_type":"code","source":["def custom_set(listt):\n","    unique_list = []\n","    for item in listt:\n","        if item not in unique_list:\n","            unique_list.append(item)\n","    return unique_list\n","\n","input_lst = input().split()\n","\n","print(*custom_set(input_lst))"],"metadata":{"id":"ml5gnbPXbeju","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729874993305,"user_tz":-300,"elapsed":7309,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"497cccfa-8e04-4de8-898e-f88404ee11e6"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["apple banana apple 1 3 4 4 5\n","apple banana 1 3 4 5\n"]}]},{"cell_type":"markdown","source":["# Задание 2\n","\n","**Задача:**\n","\n","Написать функцию для нахождения простых чисел в диапазоне\n","\n","Ввод:\n","\n","```\n","10, 50\n","```\n","\n","Вывод:\n","\n","```\n","11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47\n","```"],"metadata":{"id":"y05x0eD0cVCC"}},{"cell_type":"code","source":["def primes(start, end):\n","    primes = []\n","    for num in range(start, end + 1):\n","        if num > 1:\n","            is_prime = True\n","            for i in range(2, int(num ** 0.5) + 1): # проверяет делится ли num на какоето число\n","                if num % i == 0:\n","                    is_prime = False\n","                    break\n","            if is_prime:\n","                primes.append(num)\n","    return primes\n","\n","\n","start = int(input())\n","end = int(input())\n","print(primes(start, end))"],"metadata":{"id":"XSMJnLgrc6Bf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729875527173,"user_tz":-300,"elapsed":5468,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"2f0699f8-5c11-48c5-d8e9-8bb1583f6832"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n","50\n","[11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]\n"]}]},{"cell_type":"markdown","source":["# Задание 3\n","\n","Напишите функцию для объединения двух списков (список ключей и список значении) в словарь\n","\n","*Запрещено:*\n","\n","*   Использования готовых функции для объединения списков (пример: zip() )\n","\n","Дано:\n","\n","```\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","```\n","\n","Вывод:\n","```\n","{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n","```\n","\n","\n"],"metadata":{"id":"vYM0LyxxdElN"}},{"cell_type":"code","source":["def custom_zip(keys, values):\n","    result = {}\n","    for i in range(len(keys)):\n","        if i < len(values):\n","            result[keys[i]] = values[i]\n","        else:\n","            None\n","    print(result)\n","\n","\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","custom_zip(keys, values)"],"metadata":{"id":"CRvhHTjCdvjS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729875898377,"user_tz":-300,"elapsed":384,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"fbd62adb-8945-4dc3-a3a3-c3f915350207"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n"]}]},{"cell_type":"markdown","source":["# Задание 4\n","\n","Напишите функцию(ии) для подсчета статистических параметров:\n","*   Сумму\n","*   Среднее арифметическое\n","*   Медиану\n","*   Моду\n","\n","\n","*Запрещено:*\n","\n","*   sum()\n","*   sorted()\n","*   и других функции предоставляющих готовое решение задания\n","\n","Дано:\n","\n","```\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]\n","\n","```\n","\n","Вывод:\n","```\n","{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n","```\n"],"metadata":{"id":"L_w8H8i-fQcP"}},{"cell_type":"code","source":["def summa(data):\n","    score = 0\n","    for num in data:\n","        score += num\n","    return score\n","\n","\n","def custom_average(data):\n","    score = summa(data)\n","    if len(data) > 0:\n","        res = score / len(data)\n","    else:\n","        res = 0\n","    return res\n","\n","\n","def mediana(data):\n","    n = len(data)\n","    for i in range(n):  # это как очередь на почте, бабка орет я пенсия и прет вперед\n","        for j in range(0, n - i - 1):\n","            if data[j] > data[j + 1]:\n","                data[j], data[j + 1] = data[j + 1], data[j]\n","\n","    middle = n // 2\n","    if n % 2 == 0:\n","        median = (data[middle - 1] + data[middle]) / 2\n","    else:\n","        median = data[middle]\n","    return median\n","\n","\n","def moda(data):\n","    chastota = {}\n","    max_count = 0\n","    moda = None\n","    for number in data:\n","        if number in chastota:\n","            chastota[number] += 1\n","        else:\n","            chastota[number] = 1\n","\n","        if chastota[number] > max_count:\n","            max_count = chastota[number]\n","            moda = number\n","    return moda\n","\n","\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n","\n","print({'mean': custom_average(numbers), 'median': mediana(numbers), 'mode': moda(numbers), 'sum': summa(numbers)})"],"metadata":{"id":"dW6jW_rjfuba","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729877825154,"user_tz":-300,"elapsed":401,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"5a743800-2a83-4903-d010-c68076c59bbd"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n"]}]},{"cell_type":"markdown","source":["# Задание 5\n","\n","На ввод поступает строка символов. Строка состоит из слов, которые отделены друг от друга пробелами. Необходимо вывести самое длинное слово и его порядковый номер.\n","\n","*Запрещено:*\n","\n","*   len()\n","\n","Дано:\n","\n","```\n","Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.\n","\n","```\n","\n","Вывод:\n","```\n","Самое длинное слово с номером 5: обязательны\n","```"],"metadata":{"id":"hZW0NZ7SgTcp"}},{"cell_type":"code","source":["def longest(fraza):\n","    words = fraza.split()\n","    max_length = 0\n","    longest_word = \"\"\n","    index = 0\n","\n","    def custom_len(word):\n","        length = 0\n","        for i in word:\n","            length += 1\n","        return length\n","\n","    for i, word in enumerate(words):\n","        dlinna = custom_len(word)\n","        if dlinna > max_length:\n","            max_length = dlinna\n","            longest_word = word\n","            index = i + 1\n","    return longest_word, index\n","\n","fraza = 'Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.' # 1000 - 7 ????????????????\n","\n","print(f'Самое длинное слово с номером {longest(fraza)[1]}: {longest(fraza)[0]}')"],"metadata":{"id":"rC5DpHHLsDYp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729878413618,"user_tz":-300,"elapsed":1286,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"38f94b77-2390-43cc-8cf8-4189c8e4655b"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Самое длинное слово с номером 5: обязательны\n"]}]},{"cell_type":"markdown","source":["# Задание 6\n","\n","Напишите программу, для управления оценками студентов, со следующими функциями:\n","\n","* Добавление информации о студенте и его оценках.\n","* Подсчет среднего балла студента.\n","* Получение списка всех студентов с их средними баллами.\n","* Поиск студента по имени и вывод его оценок и среднего балла.\n","\n","\n","\n"],"metadata":{"id":"k5BzJW5ZeaQN"}},{"cell_type":"code","source":["from statistics import mean\n","\n","brs_urfu = []\n","\n","def add_student(name, brs):\n","    brs_urfu.append({'name': name, 'brs': brs})\n","\n","\n","def brs_average(brs):\n","    return mean(brs) # запрета не было кстати\n","\n","\n","def klassniy_journal():\n","    students_average = []\n","    for student in brs_urfu:\n","        average = brs_average(student['brs'])\n","        students_average.append({'name': student['name'], 'average': average})\n","    return students_average\n","\n","\n","def find_student(name):\n","    for student in brs_urfu:\n","        if student['name'].lower() == name.lower():\n","            average = brs_average(student['brs'])\n","            return {'name': student['name'], 'brs': student['brs'], 'average': average}\n","    return \"отчислен\""],"metadata":{"id":"cvhlltVbdyoL","executionInfo":{"status":"ok","timestamp":1729880592595,"user_tz":-300,"elapsed":619,"user":{"displayName":"Ss St","userId":"13844753114766479775"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["# Задание 7\n","\n","\n","**Задача:**\n","\n","Создайте приложение-викторину с командной строкой, которое задает пользователям вопросы по различным темам и отслеживает их результаты.\n","\n","Ключевые особенности:\n","\n","*   Хранение данных о вопросах и ответах на них, а также баллов за каждый вопрос\n","*   Реализуйте функцию для представления вопросов, принятия ответов пользователей и предоставления обратной связи о том, являются ли ответы правильными или неправильными.\n","*  После завершения викторины отобразите общий балл пользователя из числа ответов на вопросы.\n","*  Реализуйте функцию добавления нового вопроса\n","*  Реализуйте функцию перемешивания вопросов, для отображения случайного вопроса\n"],"metadata":{"id":"iQ8Z-7PYgu1_"}},{"cell_type":"code","source":["import random\n","\n","baza = [\n","    {\"question\": \"я поставлю автору этой штуки 100 баллов в брс?\", \"answer\": \"да\", \"points\": 100},\n","    {\"question\": \"че там когда на сво?\", \"answer\": \"сегодня\", \"points\": 10},\n","    {\"question\": \"2 + 2\", \"answer\": \"4\", \"points\": 5}]\n","\n","\n","def add_question(question, answer, points):\n","    new_question = {\"question\": question, \"answer\": answer, \"points\": points}\n","    baza.append(new_question)\n","\n","\n","def start_quiz():\n","    score = 0\n","    random.shuffle(baza)\n","\n","    for item in baza:\n","        print(\"\\n\" + item[\"question\"])\n","        user_answer = input(\"ваш ответ: \")\n","\n","        if user_answer.strip().lower() == item[\"answer\"].strip().lower():\n","            print(\"харош\")\n","            score += item[\"points\"]\n","        else:\n","            print(f\"надо было подумать лучше. Правильный варик: {item['answer']}\")\n","\n","    print(\"\\nконец\")\n","    print(f\"ваш счет: {score}\")\n","\n","\n","def danachnetsya():\n","    while True:\n","        print(\"\\nМеню\")\n","        print(\"1. Старт\")\n","        print(\"2. Добавить новый вопрос\")\n","        print(\"3. Выход\")\n","\n","        i = input(\"Выберите действие: \")\n","\n","        if i == \"1\":\n","            start_quiz()\n","        elif i == \"2\":\n","            question = input(\"Введите вопрос: \")\n","            answ = input(\"Введите ответ: \")\n","            try:\n","                points = int(input(\"Введите поинты: \"))\n","                add_question(question, answ, points)\n","                print(\"Успешно добавлено\")\n","            except ValueError:\n","                print(\"Надо было цифру\")\n","        elif i == \"3\":\n","            print(\"Правильный выбор 1000 баллов\")\n","            break\n","        else:\n","            print(\"Неверный выбор\")\n","\n","\n","danachnetsya()"],"metadata":{"id":"DhxyYwHwh2V4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729882321775,"user_tz":-300,"elapsed":6220,"user":{"displayName":"Ss St","userId":"13844753114766479775"}},"outputId":"42287051-d3bc-4154-ef4a-ac7bde58d427"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Меню\n","1. Старт\n","2. Добавить новый вопрос\n","3. Выход\n","Выберите действие: 3\n","Правильный выбор 1000 баллов\n"]}]}]}